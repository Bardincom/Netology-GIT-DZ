import UIKit

//MARK: Homework for lesson 4.2

//MARK: Задача №1
/// История:
///Вы разрабатываете спутник для полета на Европу (спутник Юпитера). В вашей команде два ученых по космодинамике. Вы даете каждому из них задачу расчитать количество топлива для достижения спутником цели.
///Данные, которые они получают — это вес спутника и длина полета. Они должны вам предоставить свои алгоритмы расчетов топлива (это ваши Замыкания). А вы по готовности алгоритмов делаете обработку данных и сравниваете результат (это ваша Функция).
///Алгоритм выполнения
///Написать функцию с входящим параметром — Замыкание (тип указан выше). Функция должна выводить в консоль результат выполнения Замыкания.
///Написать два Замыкания (тип указан выше). Внутри должна быть математическая операция (на ваш выбор) над входящими значениями.
///Вызвать функцию для первого Замыкания и потом для второго Замыкания.
///Выполнить задание, не сокращая синтаксис языка.
///Тип для Замыкания: на входе два параметра Double, На Выходе Double.


//создаю функция входящие значения которой будут вес спутника и расстояние полета - эти данные будут использоваться в следующем входящем параметре замыкания для расчета который будут передавать ученые.
func dataProcessing (weight: Double, distance: Double, calculation fuel: (Double, Double) -> Double) {
  print("Результат расчета сделанный ученым: \(fuel(weight, distance))")
}

// алгоритмы расчетов ученых, поступают два параметра типа Double, замыкание должно вернуть результат в Double
let resaultSheldon = { (weight: Double, distance: Double) -> Double in
  return (weight + distance) * 3.14 // вымышленная формула
}

let resaultVolovetc = { (weight: Double, distance: Double) -> Double in
  return ((distance * 100 * 3.14) / weight)
}

// вызываю функцию используя полученные варианты расчета ученых
dataProcessing(weight: 14, distance: 24000, calculation: resaultSheldon)
dataProcessing(weight: 14, distance: 24000, calculation: resaultVolovetc)


