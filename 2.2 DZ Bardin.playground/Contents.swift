import UIKit

// MARK: Homework for Lesson 2.2


// MARK: Задача 1

// Проанализируйте и напишите текстовый ответ по заданию. Какого типа переменные подойдут для хранения следующей информации:

 //MARK: Возраст человека
 /* взято из примера:
 
 Переменную с возрастом человека лучше сделать типа Integer. Можно выбрать дни, месяцы или годы. Например, для      приложений, где будет использоваться возраст новорожденных, нужно использовать дни или месяцы. Для взрослых людей -- годы.
 */
 
// MARK: Население города

/*
 Переменную с "Населением города" изначально в зависимости от поставленой задачи можно сделать Типа Int, Float или Double, и даже String. Обосную:
 1. Int - когда наше приложение выводит точное кол. ПРОЖИВАЮЩЕГО населения города (население города Киев на 1 апреля 2019 года 2 951 482 чел) тогда мы выбираем именно данный Тип данных Int
 2. Float или Double - если в нашем приложении выводится некая статистическая информация о ПРОЖИВАЮЩИХ и нам не нужна точнось до одного человека мы можем указать население города Киев на 1 апреля 2019 года 2.951 млн человек - можем использовать Float, чаще используют именно Double тип, в данной примере я выбрал бы именно его, на случай если нам будет нужна большая точность при бОльших значениях.
 3. String - если зачада стоит не в численности населения, а например национальная принадлежность или языковые особенности, когда мы рассматриваем меньшинства: население русскоговорящее или украинскоговорящее. в этом случаем мы будем использовать именно тип String, т.к. на мнужно будет внести данные о языковых особенностях населения города.
 
 Используя приведение типов переменную "Население города" с типами Int, Float, Double - сможем проводить математические опирации, так же сможем перевести в String любой из числовых значений.
 */

 // MARK: Число звезд в галактике
 
    // Слишком абстрактная переменная для нее больше подходит String, никто не может сосчитать данное число
 
 
 
// MARK:  Один байт ОЗУ

    // Для переменной "один байт ОЗУ" буду использовать тип Int, явное целочисленное значение не использующее дробную часть. Например наше приложение занимается конвертацией Мегабайт в байты.
 

// MARK: Средняя зарплата за год;
    // Если мы рассматирваем некую статистичекую информацию по конкретному сотруднику и отчет требует точности расчета до копеек мы можем использовать Double тип. В случае если мы получаем общую статистику по професси, используем тип Int. Сможем проводить математические опирации с другими типами при условии приведение к одному Типу, так же сможем перевести в String любой из числовых Типов значений.
 

 // MARK: Сведения спортсмен или нет;

    // Явный Bool Тип в котором может быть только одно из двух вариантов true или false. Например при приеме на работу ТРЕНЕРОМ в спорт клуб требуются сотрудники Спортсмены, и если соискатель удовлетворяет данное требование он нам подходит.

 
// MARK: Цвет фигуры
/*
    В данному случае у нас может быть 2 варианта Int или String. Существуют разные цветовые стандарты, рассмотрим 2 варианта.
    1. Мы пишем приложение которое помогаем пользователю определить цвет шрифта для его HTML странички, в формате которого входит как буквенная составляющая так и числовая, например: красный #ff0000 (Hex формат) - используем String.
    2. Второе приложение мы пришем для продавца консультанта по продаже лакокрасочных изделий в этом случае мы должны использовать другой формат RAL в котором цвета обозначаются только цифрами, например: один из оттенков красного: 3024

 */
 
 
// MARK:  Длина в мм

// данную переменную лучше всего сделать Типом Int, если мы делам некое графическое приложение и пользователь выбирает ММ в качестве базовой единици измерения наиболее удобное и соизмеримо будет именно целое число.


// MARK: Длина в см

// для данной переменно мы можем использовать Тип Float либо Doudle, так как при работе с данной переменной может быть актуально число с запятой, например диаметр отверстия 24,4 см
 
 
 
// MARK: Фамилия человека

// Используем переменнную типа Srting.

 
// MARK: Время года
/*
    можем использовать тип String - для указание конкретного времени года, например "Осень".
    можем использовать тип Bool для отметки какое сейчас время года Осень = true, Лето = false
    можем использовать тип Int, например если мы расчитываем сколько дней осталось до астрономической смены времени года (сентябрьское и мартовское равноденствие)
*/
 
// MARK: Пол человека
/*
    можем использовать тип String -  пользователь сам будет вписывать пол
    можем использовать тип Bool - при установке соответствующей галочки в приложении (если галочка Активна напротив надписи Женщина, значит пол Женщина true)
*/
 


//MARK: Задача 2

// Объявите и проинициализируйте переменные из п.1, дав им имена по смыслу. Выведите значения этих переменных в консоль в форме <Название: значение>.


// Возраст человека. использую переменную c т.к. может будет меняться,  c типом Int.
var age: Int = 31
print("Возраст: \(age)")

// Население города. использую переменную т.к. может будет меняться,  c типом Int.
var cityPopulation: Int = 2_951_482
print("Население города Киев на 1 апреля 2019 года: \(cityPopulation) чел")

// Число звезд в галактике. Использую константу с типом String
let numberOfStarsInGalaxy: String = "Еще не один звездочет не смог просчитать точное количесвто звезд"
print("Число звезд в галактиве: \(numberOfStarsInGalaxy)")

// Один байт ОЗУ. Использую константу с типом Int, так как 1 байт всегда будет 1 байт
let oneByte: Int = 1
print("Один байт ОЗУ: \(oneByte)")

// Средняя зарплата за год. Использую переменную с типом Int, ввел без явного указания типа, Xcode автоматически присвоил тип Integer
var averageAnnualSalary = 13458
print("Средняя зарплата за год: \(averageAnnualSalary)")

// Сведения спортсмен или нет. Использую переменную с типом Bool.
var isSportsmen: Bool = false
if isSportsmen {
    print("Сведения спортсмен или нет: \"ДА\" \(isSportsmen)")
} else {
    print("Сведения спортсмен или нет: \"НЕТ\" \(isSportsmen)")
}

// Цвет фигуры. Предположим что мы не знаем будет ли меняться в дальнейшем цвет нашей фигруы, сделаем ее константой, если в процессе написания кода выявится что нам необходимо изменить данное значение Xcode  подскажет нам и мы это сделаем только при необходимости.
let figugeColor: String = "red"
print("Цвет фигуры: \(figugeColor)")

// Длина в мм.
var lenghtInMillimeters = 80
print("Длина в мм: \(lenghtInMillimeters)")

// Длина в см. Тип автоматически подставился Double
var lenghtInCentimeters = 25.5
print("Длина в см: \(lenghtInCentimeters)")

// Фамилия человека. Константа с типом String
let surname = "Ivanov"
print("Фамилия человека: \(surname)")

// Время года. Переменная с типом String
var season = "Autumn"
print("Время года: \(season)")

// Пол человека. Переменная с типом String
var gender = "male"
print("Пол человека: \(gender)")

